{"version":3,"sources":["dashboard/SideNav.jsx","reducers/authreducer.jsx","dashboard/TopNav.jsx","dashboard/Dashboard.jsx","reducers/categoryreducer.jsx","reducers/listingreducer.jsx","pages/Discover/index.jsx","reducers/sellerbiddedonbidsitemsreducer.jsx","pages/AcceptDeclineModal/index.jsx","pages/MyListing/Card.jsx","pages/MyListing/index.jsx","reducers/watchreducer.jsx","pages/Category/Card.jsx","pages/Category/index.jsx","pages/Message/messageCard.jsx","reducers/messagereducer.jsx","pages/Message/messageModal.jsx","reducers/detailreducer.jsx","pages/Detail/index.jsx","pages/WatchList/index.jsx","reducers/currbidsreducer.jsx","pages/CurrentBids/index.jsx","pages/Login/index.jsx","pages/Register/index.jsx","pages/ForgotPW/index.jsx","pages/img/1.jpg","pages/MakeOffer/index.jsx","pages/Message/index.jsx","pages/CreateNewListing/index.jsx","dashboard/index.jsx","reducers/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["SidenavListitem","link","this","props","to","ListItem","button","ListItemIcon","icon","ListItemText","primary","textLabel","children","Component","SideNav","List","className","inset","token","Divider","Button","classes","root","variant","color","connect","state","auth","userName","authSlice","createSlice","name","initialState","userID","reducers","setToken","payload","logout","localStorage","clear","actions","TopNav","openLoggedInAvatar","React","createRef","isAvatarOpen","userAvatar","AppBar","Toolbar","IconButton","edge","aria-label","Typography","ref","onClick","setState","Avatar","alt","src","Menu","paper","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","open","onClose","MenuItem","console","log","dispatch","bindActionCreators","Dashboard","categorySlice","categoryList","categoryPopularList","setCategoryList","setCategoryPopularList","fetchMyListings","createAsyncThunk","args","thunkAPI","a","getState","fetch","method","mode","credentials","headers","Authorization","response","json","jsondata","ownerListing","listingSlice","listingList","setListing","extraReducers","fulfilled","action","CategoryItem","category","_id","image","CategoryName","MidSectionDiscover","threeItemsExamples","ListItemTitle","listItemImg","titleMidSectionIndividual","Grid","item","xs","Paper","elevation","href","Discover","fetchallCategories","responsePopular","jsondataPopular","sortedCategory","categoryItems","map","container","spacing","listing","fetchOtherUsersBidsOnMyListing","SellerBiddedOnBidsItemsSlice","sellerbiddedonbidsitems","setSellerBiddedOnBidsItems","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","overflow","backgroundColor","palette","background","border","boxShadow","shadows","padding","width","marginBottom","media","height","cardActionButtons","imageCard","flexDirection","bidItem","marginLeft","offerDetail","overflowY","ImageCard","CardMedia","component","MediaCard","useDispatch","imagesOfTheSellersItemInMediaCard","imagesOfTheSellersItem","itemOfImage","itemsbidsFromOtherUsersArrPassedIntoMediaCard","itemsbidsFromOtherUsers","itemsbidsOnYourItem","images","Card","CardContent","gutterBottom","title","CardActions","authToken","body","JSON","stringify","itemsbidCardID","listingID","TransitionsModal","useState","setOpen","displayUser","sellerbiddedonbids","filter","onlyActiveNeededElement","status","itembidsCard","items_bid","type","bidCount","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","maxWidth","marginRight","useSelector","size","MyListing","displayCards","filteredSellerbiddedonbids","sellersListingBidsItems","sellerBidsNeeded","ListingID","bids","ItemBids","fetchWatchList","watchList","myWatchList","watchSlice","setWatch","cardTitle","CategoryListCard","isWatched","watch","indexOf","e","value","stopPropagation","selectCategory","filteredResultsForOnlyOtherUsersListing","categoryListing","categoryCard","ownerUserID","Categories","categoryId","window","location","pathname","split","find","c","categoryItemsMappedoutToDisplay","user","userIcon","MessageCard","CardActionArea","UserName","ReadByUser","includes","UserID","Badge","badgeContent","MessageTime","Message","createMessage","detail","user2ID","user2Name","ownerUserName","savedMessage","fetchMessage","messageSlice","messageListing","setMessage","bottom","bubbleContainer","bubble","borderRadius","margin","bubbleWrap","inputContainer","replyButton","marginTop","ChatLayout","message","requserID","chatBubbles","messageList","sender_user_id","fontSize","msg_text","messageTime","MessageModel","messageText","setMessageText","listingDetail","startIcon","TextField","label","target","text","fetchDetail","fetchUrl","oneListing","detailSlice","setDetail","Detail","responsive","0","items","1024","displayImages","autoPlayInterval","autoPlayDirection","autoPlay","autoHeight","fadeOutAnimation","mouseTrackingEnabled","disableAutoPlayOnAction","description","exchangeDescription","currentUserID","authTokenInFuncCompState","element","owner","WatchList","currBidsSlice","currBidsList","setCurrBidsList","minWidth","cardContent","itemIbidWithName","CardItemIbidWith","multipleItemsCardMedia","usersToken","listingBidId","responseToRefreshCurrBids","allListingBidByOwner","CurrentBidsCards","currBids","currbids","filterredCurrBidsActive","length","AcceptedBidsCards","TabPanel","index","other","role","hidden","Box","p","a11yProps","useStylesForTabs","flexGrow","setValue","useEffect","fetchcurrbids","position","Tabs","onChange","event","newValue","Tab","Copyright","align","Date","getFullYear","avatar","secondary","main","form","submit","Login","setUsername","password","setPassword","error","setError","Container","CssBaseline","Alert","severity","noValidate","required","fullWidth","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Link","mt","Register","fname","setFname","lname","setLname","setUserName","email","setEmail","phoneNumber","setPhoneNumber","alertError","registrationComplete","SetRegistrationComplete","sm","firstName","lastName","justify","ForgotPW","MyListCard","MyOfferCard","RemoveOnClick","MakeOffer","itemsbids","alertNoneSelectedToBidWith","itemIDsToBidWithOnlyArr","onlyItemIdNeeded","itemOfferedIds","myListCards","fullItem","OfferedCard","removedItemsBids","makeBidApi","msg","messageID","date_created","Index","foundMessage","setMessageID","displayMessage","user1ID","user1Name","read_by_user_ids","messageClicked","receiver","response2","CreateNewListing","files","itemName","itemDescription","filesLimit","maxFileSize","handleChange","bind","TextareaAutosize","rowsMin","placeholder","Autocomplete","options","getOptionLabel","option","style","renderInput","params","formData","FormData","append","i","file","path","combineReducers","reducer","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","logger","thunk","persistor","persistStore","App","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.151d5c86.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ListIcon from '@material-ui/icons/List';\nimport MessageIcon from '@material-ui/icons/Message';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport './dashboard.scss';\nimport { NavLink } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userName: state.auth.userName,\n  };\n};\n\nclass SidenavListitem extends Component {\n  render() {\n    const { link } = this.props;\n\n    return (\n      <div>\n        <NavLink to={ link ? link : \"/\"}>\n          <ListItem button>\n            <ListItemIcon>{this.props.icon}</ListItemIcon>\n            <ListItemText primary={this.props.textLabel} />\n          </ListItem>\n        </NavLink>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport class SideNav extends Component {\n  render() {\n    // console.log('this.props SideNav Component test', this.props)\n    return (\n      <List>\n      \n        <SidenavListitem icon={<SearchIcon />} textLabel=\"Discover\" link=\"/discover\" />\n            <div className=\"wrapper-for-children-sublist\">\n              <SidenavListitem inset icon={<CategoryIcon />} textLabel=\"Categories\" link=\"/categories\" />\n            </div>\n\n        {this.props.token !== null ? \n          <Fragment>\n        <SidenavListitem icon={<ListIcon />} textLabel=\"My Listing\" link=\"/mylisting\"/>\n        <SidenavListitem icon={<MessageIcon />} textLabel=\"Message\" link=\"/messages\" />\n        <SidenavListitem icon={<StarsIcon />} textLabel=\"My WatchList\"  link=\"/watchlist\" />\n        <SidenavListitem icon={<GavelIcon />} textLabel=\"Current Bids\" link=\"/currbids\" />\n        <Divider />\n        <NavLink to=\"/createnewlisting\">\n          <Button\n            classes={{ root: 'create-btn' }}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            Create New Listing\n          </Button>\n        </NavLink> \n        </Fragment>   : null}\n        \n\n      </List>\n    );\n  }\n}\n\n\nexport default connect(mapStateToProps)(SideNav);\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    token: null,\n    userID: null,\n    userName: null,\n  },\n  reducers: {\n    setToken: (state, { payload }) => {\n      state.token = payload.token\n      state.userID = payload.userID\n      state.userName = payload.userName\n    },\n    logout: (state, { payload }) => {\n      state.token = null\n      state.userID = null\n      state.userName = null\n      localStorage.clear()\n    },\n  }\n})\nexport const { setToken, logout } = authSlice.actions","import React, { Component, Fragment } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { logout } from \"../reducers/authreducer\";\nimport \"./dashboard.scss\";\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n    userName: state.auth.userName,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      logout,\n    },\n    dispatch\n  );\n\nclass TopNav extends Component {\n  constructor(props) {\n    super(props);\n    this.openLoggedInAvatar = React.createRef();\n    this.state = {\n      isAvatarOpen: false,\n    };\n  }\n  \n  render() {\n    const userAvatar = {\n      userName: \"Remy Sharp\",\n      avatarImage: \"https://randomuser.me/api/portraits/women/47.jpg\",\n    };\n\n    return (\n      <div className=\"nav-root\">\n        <AppBar>\n          <Toolbar classes={{ root: \"toolbar-custom-for-top-nav\" }}>\n            <IconButton\n              edge=\"start\"\n              className=\"menuButton\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              ExDepot\n            </IconButton>\n            <Typography variant=\"h6\" className=\"title\"></Typography>\n            {/*<div className=\"search\">\n              <SearchIcon />\n              <InputBase placeholder=\"Search…\" />\n    </div> */}\n            {this.props.token ? \n              <div\n                className=\"avatar\"\n                ref={this.openLoggedInAvatar}\n                onClick={() => this.setState({ isAvatarOpen: true })}\n              >{this.props.userName}\n                <Avatar\n                  alt={userAvatar.userName}\n                  src={userAvatar.avatarImage}\n                />\n              </div>\n              : \n              <Fragment>\n                <NavLink to=\"/login\">\n                  <Button color=\"inherit\">Login</Button>\n                </NavLink>\n                |\n                <NavLink to=\"/register\">\n                  <Button color=\"inherit\">Register</Button>\n                </NavLink>\n              </Fragment>\n            }\n\n            <Menu\n              classes={{ paper: \"menu-avatar\" }}\n              id=\"simple-menu\"\n              anchorEl={this.openLoggedInAvatar}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\",\n              }}\n              keepMounted\n              open={this.state.isAvatarOpen}\n              onClose={() => this.setState({ isAvatarOpen: false })}\n            >\n              <MenuItem onClick={() => this.setState({ isAvatarOpen: false })}>\n                Profile\n              </MenuItem>\n              <MenuItem>Help</MenuItem>\n              <MenuItem\n                onClick={() => {\n                  console.log(\"logout\");\n                  this.props.logout();\n                }}\n              >\n                Logout\n              </MenuItem>\n            </Menu>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopNav);\n","import React, { Component } from 'react';\nimport './dashboard.scss';\nimport SideNav from './SideNav';\nimport TopNav from './TopNav';\nexport default class Dashboard extends Component {\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <div className=\"top-nav\">\n          <TopNav />\n        </div>\n        <div className=\"content-section\">\n          <div className=\"side-nav\">\n            <SideNav />\n          </div>\n          <div className=\"content-pane\">{this.props.children}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const categorySlice = createSlice({\n  name: 'category',\n  initialState: {\n    categoryList: [],\n    categoryPopularList: [],\n  },\n  reducers: {\n    setCategoryList: (state, { payload }) => {\n      state.categoryList = payload.categoryList\n    },\n    setCategoryPopularList: (state, { payload }) => {\n      state.categoryPopularList = payload.categoryPopularList\n    },\n  }\n})\nexport const { setCategoryList, setCategoryPopularList } = categorySlice.actions","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const fetchMyListings = createAsyncThunk(\n  \"fetchMyListings\",\n  async (args, thunkAPI) => {\n    const token = thunkAPI.getState().auth.token;\n    const fetchUrl = \"https://heed.place/api/listings/fetchownerlisting\";\n    const response = await fetch(fetchUrl, {\n      method: \"GET\",\n      mode: \"cors\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    let jsondata = await response.json();\n\n    return jsondata.ownerListing;\n  }\n);\n\nexport const listingSlice = createSlice({\n  name: \"listing\",\n  initialState: {\n    listingList: [],\n  },\n  reducers: {\n    setListing: (state, { payload }) => {\n      state.listingList = payload.listingList;\n    },\n  },\n  extraReducers: {\n    [fetchMyListings.fulfilled]: (state, action) => {\n      state.listingList = action.payload;\n    },\n  },\n});\nexport const { setListing } = listingSlice.actions;\n","import React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport \"./discover.scss\";\nimport { ListItem } from \"@material-ui/core\";\nimport Dashboard from \"../../dashboard/Dashboard\";\nimport Button from \"@material-ui/core/Button\";\nimport {\n  setCategoryList,\n  setCategoryPopularList,\n} from \"../../reducers/categoryreducer\";\nimport { setListing } from \"../../reducers/listingreducer\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { NavLink } from \"react-router-dom\";\n\nexport class CategoryItem extends Component {\n  render() {\n    const { category } = this.props;\n    return (\n      <div className=\"single-category-display\">\n        <NavLink to={`/categories/${category._id}`}>\n          <img\n            className=\"category-image\"\n            src={category.image}\n            alt={category.CategoryName}\n          />\n        </NavLink>\n        {category.CategoryName}\n      </div>\n    );\n  }\n}\n\nclass MidSectionDiscover extends Component {\n  render() {\n    const threeItemsExamples = [\n      {\n        ListItemTitle: \"Beats Headphones\",\n        listItemImg: \"https://www.adorama.com/images/Large/btmx422lla.jpg\",\n      },\n      {\n        ListItemTitle: \"Batman #497: The breaking of the Bat\",\n        listItemImg:\n          \"https://upload.wikimedia.org/wikipedia/en/thumb/c/c1/Batman497.png/220px-Batman497.png\",\n      },\n      {\n        ListItemTitle: \"Steam Controller\",\n        listItemImg:\n          \"https://cdn.vox-cdn.com/thumbor/4D03ejrdgThqKAZHz084ody4dBQ=/0x0:2040x1530/920x0/filters:focal(0x0:2040x1530):format(webp):no_upscale()/cdn.vox-cdn.com/uploads/chorus_asset/file/19411304/shollister_191126_steam_controller_103959__2_.jpg\",\n      },\n    ];\n    const {\n      titleMidSectionIndividual,\n      listItemImg,\n      ListItemTitle,\n    } = this.props;\n    return (\n      <Grid item xs={4}>\n        <h2 className=\"title-component-discover\">\n          {titleMidSectionIndividual}\n        </h2>\n        <Paper elevation={5}>\n          <List>\n            <Button href=\"/prodetail/someProductIDNum\">\n              <ListItem classes={{ root: \"list-items-midsection-discover\" }}>\n                <img\n                  className=\"item-image\"\n                  src={threeItemsExamples[0].listItemImg}\n                  alt=\"...\"\n                />\n                <div className=\"listItem-midsection-title\">\n                  {threeItemsExamples[0].ListItemTitle}\n                </div>\n                <BookmarkBorderIcon />\n              </ListItem>\n            </Button>\n            <Button href=\"/prodetail/someProductIDNum\">\n              <ListItem classes={{ root: \"list-items-midsection-discover\" }}>\n                <img\n                  className=\"item-image\"\n                  src={threeItemsExamples[1].listItemImg}\n                  alt=\"...\"\n                />\n                <div className=\"listItem-midsection-title\">\n                  {threeItemsExamples[1].ListItemTitle}\n                </div>\n                <BookmarkBorderIcon />\n              </ListItem>\n            </Button>\n            <Button href=\"/prodetail/someProductIDNum\">\n              <ListItem classes={{ root: \"list-items-midsection-discover\" }}>\n                <img\n                  className=\"item-image\"\n                  src={threeItemsExamples[2].listItemImg}\n                  alt=\"...\"\n                />\n                <div className=\"listItem-midsection-title\">\n                  {threeItemsExamples[2].ListItemTitle}\n                </div>\n                <BookmarkBorderIcon />\n              </ListItem>\n            </Button>\n          </List>\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nclass Discover extends Component {\n  async componentDidMount() {\n    const response = await fetch(\n      \"https://heed.place/api/categories/fetchallCategories\",\n      {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    let jsondata = await response.json();\n    // console.log(\"categoryList from the server\", jsondata.fetchallCategories)\n    this.props.setCategoryList({ categoryList: jsondata.fetchallCategories });\n\n    const responsePopular = await fetch(\n      \"https://heed.place/api/categories/fetcpopularcategoriesfour\",\n      {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    let jsondataPopular = await responsePopular.json();\n    this.props.setCategoryPopularList({\n      categoryPopularList: jsondataPopular.sortedCategory,\n    });\n  }\n\n  render() {\n    const categoryItems = this.props.categoryPopularList.map((category) => (\n      <CategoryItem category={category} />\n    ));\n\n    return (\n      <Dashboard>\n        <div>\n          <div className=\"discover\">\n            <h2 className=\"title-component-discover\">Popular Categories:</h2>\n            <Grid container spacing={6}>\n              <Grid item xs={12}>\n                <Paper elevation={5}>\n                  <div className=\"display-all-items-wrapper\">\n                    {categoryItems}\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n\n            <Grid container spacing={6}>\n              <MidSectionDiscover titleMidSectionIndividual=\"Popular\" />\n              <MidSectionDiscover titleMidSectionIndividual=\"Ending Soon\" />\n              <MidSectionDiscover titleMidSectionIndividual=\"Suggested For you\" />\n            </Grid>\n          </div>\n        </div>\n      </Dashboard>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    categoryList: state.category.categoryList,\n    categoryPopularList: state.category.categoryPopularList,\n    listing: state.listing,\n  };\n};\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setCategoryList,\n      setCategoryPopularList,\n      setListing,\n    },\n    dispatch\n  );\nexport default connect(mapStateToProps, mapDispatchToProps)(Discover);\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const fetchOtherUsersBidsOnMyListing = createAsyncThunk(\n  \"fetchOtherUsersBidsOnMyListing\",\n  async (args, thunkAPI) => {\n    const token = thunkAPI.getState().auth.token;\n    const fetchUrl =\n      \"https://heed.place/api/listingbid/fetchotherusersbidsonmylisting\";\n    const response = await fetch(fetchUrl, {\n      method: \"GET\",\n      mode: \"cors\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    let jsondata = await response.json();\n    return jsondata;\n  }\n);\n\nexport const SellerBiddedOnBidsItemsSlice = createSlice({\n  name: \"sellerbiddedonbids\",\n  initialState: {\n    sellerbiddedonbidsitems: [],\n  },\n  reducers: {\n    setSellerBiddedOnBidsItems: (state, { payload }) => {\n      state.sellerbiddedonbidsitems = payload.sellerbiddedonbidsitems;\n    },\n  },\n  extraReducers: {\n    [fetchOtherUsersBidsOnMyListing.fulfilled]: (state, action) => {\n      state.sellerbiddedonbidsitems = action.payload;\n    },\n  },\n});\nexport const {\n  setSellerBiddedOnBidsItems,\n} = SellerBiddedOnBidsItemsSlice.actions;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchOtherUsersBidsOnMyListing } from \"../../reducers/sellerbiddedonbidsitemsreducer\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"scroll\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    width: \"50%\",\n  },\n  root: {\n    width: \"auto\",\n    marginBottom: 10,\n  },\n  media: {\n    height: 80,\n    width: 150,\n  },\n  cardActionButtons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  imageCard: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  bidItem: {\n    marginLeft: 5,\n  },\n  offerDetail: {\n    height: 800,\n    overflowY: \"scroll\",\n  },\n}));\n\nexport function ImageCard(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.bidItem}>\n      <CardMedia className={classes.media} image={props.image} />\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        {props.name}\n      </Typography>\n    </div>\n  );\n}\n\nexport function MediaCard(props) {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const imagesOfTheSellersItemInMediaCard = props.imagesOfTheSellersItem.map(\n    (itemOfImage) => {\n      return <ImageCard image={itemOfImage} />;\n    }\n  );\n\n  // console.log(\"props for MediaCard in AcceptDecline\", props)\n\n  const itemsbidsFromOtherUsersArrPassedIntoMediaCard = props.itemsbidsFromOtherUsers.map(\n    (itemsbidsOnYourItem) => {\n      return (\n        <ImageCard\n          image={itemsbidsOnYourItem.images[0]}\n          name={itemsbidsOnYourItem.name}\n        />\n      );\n    }\n  );\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h3\">\n          <div className={classes.imageCard}>\n            {imagesOfTheSellersItemInMediaCard}\n          </div>\n          {props.title}\n        </Typography>\n        <Typography variant=\"h9\">Bids on my item with these items:</Typography>\n        <div className={classes.imageCard}>\n          {itemsbidsFromOtherUsersArrPassedIntoMediaCard}\n        </div>\n      </CardContent>\n      <CardActions className={classes.cardActionButtons}>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={async () => {\n            const response = await fetch(\n              `https://heed.place/api/listingbid/declinebid`,\n              {\n                method: \"PUT\",\n                mode: \"cors\",\n                credentials: \"same-origin\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: `Bearer ${props.authToken}`,\n                },\n                body: JSON.stringify({\n                  _id: props.itemsbidCardID,\n                }),\n              }\n            );\n            let jsondata = await response.json();\n            dispatch(fetchOtherUsersBidsOnMyListing());\n          }}\n        >\n          Decline\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={async () => {\n            const response = await fetch(\n              `https://heed.place/api/listingbid/acceptbid`,\n              {\n                method: \"PUT\",\n                mode: \"cors\",\n                credentials: \"same-origin\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: `Bearer ${props.authToken}`,\n                },\n                body: JSON.stringify({\n                  _id: props.itemsbidCardID,\n                  listingID: props.listingID,\n                }),\n              }\n            );\n            let jsondata = await response.json();\n            dispatch(fetchOtherUsersBidsOnMyListing());\n          }}\n        >\n          Accept\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default function TransitionsModal(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // console.log(\"transition Modal in acceptDeclineModal index\", props)\n  const filteredActiveBidsCardsData = props.sellerbiddedonbids.filter(\n    (onlyActiveNeededElement) => onlyActiveNeededElement.status === \"active\"\n  );\n  const displayUser = filteredActiveBidsCardsData.map((itembidsCard) => {\n    return (\n      <MediaCard\n        key={itembidsCard._id}\n        itemsbidCardID={itembidsCard._id}\n        title={itembidsCard.listing.name}\n        listingID={itembidsCard.listing._id}\n        imagesOfTheSellersItem={itembidsCard.listing.images}\n        itemsbidsFromOtherUsers={itembidsCard.items_bid}\n        authToken={props.authToken}\n      />\n    );\n  });\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        {`Bids: ${props.bidCount}`}\n      </button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Item Bids</h2>\n            <div className={classes.offerDetail}>{displayUser}</div>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport AcceptDeclineModal from \"../AcceptDeclineModal/\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginBottom: 50,\n    marginRight: 50,\n  },\n  media: {\n    height: 200,\n    width: 345,\n  },\n  cardActionButtons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n  // console.log(\"MyListing Card.jsx props\", props)\n  const token = useSelector((state) => state.auth.token);\n  return (\n    <Card className={classes.root}>\n      <NavLink to={`/prodetail/${props.listingID}`} listingID={props.listingID}>\n        <CardMedia className={classes.media} image={props.image} />\n      </NavLink>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h3\">\n          {props.title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          <AcceptDeclineModal\n            bidCount={props.bidCount}\n            sellerbiddedonbids={props.sellerbiddedonbids}\n            authToken={props.authToken}\n          />\n        </Typography>\n      </CardContent>\n      <CardActions\n        className={classes.cardActionButtons}\n        onClick={async () => {\n          const response = await fetch(\n            `https://heed.place/api/listings/deleteListing`,\n            {\n              method: \"DELETE\",\n              mode: \"cors\",\n              credentials: \"same-origin\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${token}`,\n              },\n              body: JSON.stringify({\n                id: props.listingID,\n              }),\n            }\n          );\n          let jsondata = await response.json();\n          console.log(jsondata);\n          // dispatch(fetchOtherUsersBidsOnMyListing())\n        }}\n      >\n        <Button size=\"small\" color=\"primary\">\n          {<DeleteForeverIcon />}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from './Card';\nimport CreateIcon from '@material-ui/icons/Create';\nimport './MyListing.scss';\nimport Dashboard from '../../dashboard/Dashboard';\nimport { fetchMyListings } from '../../reducers/listingreducer';\nimport { fetchOtherUsersBidsOnMyListing } from '../../reducers/sellerbiddedonbidsitemsreducer';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\n\nclass MyListing extends Component {\n\n  async componentDidMount() {\n    this.props.fetchMyListings()\n    this.props.fetchOtherUsersBidsOnMyListing()\n  }\n  render() {\n    \n    const displayCards = this.props.listing.listingList.map((item) => {\n      let filteredSellerbiddedonbids = []\n      if(this.props.sellerbiddedonbids.sellerbiddedonbidsitems.sellersListingBidsItems) {\n        filteredSellerbiddedonbids = this.props.sellerbiddedonbids.sellerbiddedonbidsitems.sellersListingBidsItems.filter((sellerBidsNeeded) => sellerBidsNeeded.ListingID === item._id);\n        \n      }\n      return (\n\n        <Card\n          title={item.name}\n          bids={item.ItemBids}\n          listingID={item._id}\n          bidCount={item.bidCount}\n          image={item.images[0] ? item.images[0] : \"https://media.istockphoto.com/photos/single-cloud-central-in-blue-sky-picture-id667409780\"}\n          sellerbiddedonbids={filteredSellerbiddedonbids}\n          authToken={this.props.authToken}\n        />\n      );\n    });\n    return (\n      <Dashboard>\n        <div className='mainDisplay'>\n          <div className=\"cards\">{displayCards}</div>\n        </div>\n      </Dashboard>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    listing: state.listing,\n    authToken: state.auth.token,\n    sellerbiddedonbids: state.sellerbiddedonbids,\n  };\n};\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchMyListings,\n      fetchOtherUsersBidsOnMyListing,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyListing);","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const fetchWatchList = createAsyncThunk(\n  \"fetchWatchLists\",\n  async (args, thunkAPI) => {\n    const token = thunkAPI.getState().auth.token;\n    const fetchUrl = \"https://heed.place/api/watchlist/\";\n    const response = await fetch(fetchUrl, {\n      method: \"GET\",\n      mode: \"cors\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    let watchList = await response.json();\n    return watchList.myWatchList;\n  }\n);\n\nexport const watchSlice = createSlice({\n  name: \"watch\",\n  initialState: {\n    watchList: [],\n  },\n  reducers: {\n    setWatch: (state, { payload }) => {\n      state.watchList = payload.watchList;\n    },\n  },\n  extraReducers: {\n    [fetchWatchList.fulfilled]: (state, action) => {\n      state.watchList = action.payload;\n    },\n  },\n});\nexport const { setWatch } = watchSlice.actions;\n","import { React, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport Typography from \"@material-ui/core/Typography\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setWatch, fetchWatchList } from \"../../reducers/watchreducer\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginBottom: 50,\n    marginRight: 50,\n  },\n  media: {\n    height: 200,\n    width: 345,\n  },\n  cardActionButtons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  cardTitle: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n});\n\nexport default function CategoryListCard(props) {\n  const classes = useStyles();\n  const watchList = useSelector((state) => state.watch.watchList);\n  const watchListIds = watchList.map((item) => item.listingID);\n  const isWatched = watchListIds.indexOf(props.listingID) >= 0;\n  // const isWatched = false\n  const dispatch = useDispatch();\n  return (\n    <Card className={classes.root}>\n      <NavLink to={`/prodetail/${props.listingID}`} listingID={props.listingID}>\n        <CardMedia className={classes.media} image={props.image} />\n      </NavLink>\n      <CardContent>\n        <div className={classes.cardTitle}>\n          <Typography gutterBottom variant=\"h5\" component=\"h3\">\n            {props.title}\n          </Typography>\n          <div>\n            {isWatched && props.authToken !== null ? (\n              <BookmarkIcon\n                onClick={async (e, value) => {\n                  e.stopPropagation();\n                  const response = await fetch(\n                    \"https://heed.place/api/watchlist/toggle\",\n                    {\n                      method: \"POST\",\n                      mode: \"cors\",\n                      credentials: \"same-origin\",\n                      headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${props.authToken}`,\n                      },\n                      body: JSON.stringify({\n                        listingID: `${props.listingID}`,\n                      }),\n                    }\n                  );\n                  let jsondata = await response.json();\n                  dispatch(fetchWatchList());\n                }}\n              />\n            ) : props.authToken !== null ? (\n              <BookmarkBorderIcon\n                onClick={async (e, value) => {\n                  e.stopPropagation();\n                  const response = await fetch(\n                    \"https://heed.place/api/watchlist/toggle\",\n                    {\n                      method: \"POST\",\n                      mode: \"cors\",\n                      credentials: \"same-origin\",\n                      headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${props.authToken}`,\n                      },\n                      body: JSON.stringify({\n                        listingID: `${props.listingID}`,\n                      }),\n                    }\n                  );\n                  let jsondata = await response.json();\n                  dispatch(fetchWatchList());\n\n                  // dispatch(setWatch({watchList:jsondata.myWatchList}))\n                }}\n              />\n            ) : null}\n          </div>\n        </div>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Bids:{props.bids}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardActionButtons}>\n        <Button size=\"small\" color=\"primary\">\n          {<EditIcon />}\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          {<DeleteForeverIcon />}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { Component } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport \"./discover.scss\";\n// import { CategoryItem } from '../Discover';\nimport MyListing from \"../MyListing\";\nimport Dashboard from \"../../dashboard/Dashboard\";\nimport Card from \"./Card\";\nimport { setCategoryList } from \"../../reducers/categoryreducer\";\nimport { setListing } from \"../../reducers/listingreducer\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { NavLink } from \"react-router-dom\";\n\nclass CategoryItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: {},\n      listing: {},\n    };\n  }\n\n  render() {\n    const { category, selectCategory } = this.props;\n    return (\n      <div className=\"single-category-display\">\n        <NavLink to={`/categories/${category._id}`}>\n          <img\n            className=\"category-image\"\n            src={category.image}\n            alt={category.name}\n            onClick={async () => {\n              selectCategory(category);\n              const response = await fetch(\n                `https://heed.place/api/listings/fetchcategorylisting/${this.props.category._id}`,\n                {\n                  method: \"GET\",\n                  mode: \"cors\",\n                  credentials: \"same-origin\",\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${this.props.authToken}`,\n                  },\n                }\n              );\n              let jsondata = await response.json();\n              let filteredResultsForOnlyOtherUsersListing = jsondata.categoryListing.filter(\n                (categoryCard) => categoryCard.ownerUserID !== this.props.userID\n              );\n              // console.log(\"filteredResultsForOnlyOtherUsersListing\", filteredResultsForOnlyOtherUsersListing)\n              console.log(\"this.props.userID in category\", this.props.userID);\n              this.props.setListing({\n                listingList: filteredResultsForOnlyOtherUsersListing,\n              });\n            }}\n            // onClick={async () => {\n            //   const response = await fetch(\n            //     `https://heed.place/api/listings/fetchcategorylisting/${this.props.category._id}`,\n            //     {\n            //       method: 'GET',\n            //       mode: 'cors',\n            //       credentials: 'same-origin',\n            //       headers: {\n            //         'Content-Type': 'application/json',\n            //         Authorization: `Bearer ${this.props.authToken}`,\n            //       },\n            //     }\n            //   );\n            //   let jsondata = await response.json();\n            //   this.props.setListing({ listingList: jsondata.categoryListing });\n            // }}\n          />\n        </NavLink>\n        {category.CategoryName}\n      </div>\n    );\n  }\n}\n\nclass Categories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listing: {},\n      categoryId: \"\",\n    };\n  }\n  selectCategory = (category) => {\n    this.setState({\n      categoryId: category._id,\n    });\n  };\n  async componentDidMount() {\n    const response = await fetch(\n      \"https://heed.place/api/categories/fetchAllCategories\",\n      {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${this.props.authToken}`,\n        },\n      }\n    );\n    let jsondata = await response.json();\n    this.props.setCategoryList({ categoryList: jsondata.fetchallCategories });\n    // const categoryId = window.location.pathname.split('/')[2]\n    // this.setState({\n    //   categoryId: categoryId,\n\n    // })\n  }\n\n  async componentDidUpdate() {\n    const categoryId = window.location.pathname.split(\"/\")[2];\n\n    if (this.state.categoryId !== categoryId) {\n      this.setState({\n        categoryId: categoryId,\n      });\n    }\n  }\n\n  render() {\n    const category = this.props.categoryList.find(\n      (c) => c._id == this.state.categoryId\n    );\n    const displayCards = this.props.listing.listingList.map((item) => {\n      return (\n        <Card\n          listingID={item._id}\n          title={item.name}\n          bids={item.ItemBids}\n          authToken={this.props.authToken}\n          image={\n            item.images[0]\n              ? item.images[0]\n              : \"https://media.istockphoto.com/photos/single-cloud-central-in-blue-sky-picture-id667409780\"\n          }\n        />\n      );\n    });\n    const categoryItemsMappedoutToDisplay = this.props.categoryList.map(\n      (category) => {\n        return (\n          <CategoryItem\n            category={category}\n            setListing={this.props.setListing}\n            authToken={this.props.authToken}\n            userID={this.props.userID}\n            selectCategory={this.selectCategory}\n          />\n        );\n      }\n    );\n    return (\n      <Dashboard>\n        <div>\n          <h2 className=\"title-component-discover\">Full List of Categories</h2>\n          <h2 className=\"title-component-discover\">\n            this is category: {category && category.CategoryName}\n          </h2>\n          <Grid container spacing={6}>\n            <Grid item xs={12}>\n              <Paper elevation={5}>\n                <div className=\"display-all-items-wrapper\">\n                  {categoryItemsMappedoutToDisplay}\n                </div>\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <h2 className=\"title-component-discover\">\n                Items in Selected Category: {category && category.CategoryName}\n              </h2>\n              <Paper elevation={5}>\n                <div className=\"display-all-items-wrapper\">\n                  <div className=\"cards\">{displayCards}</div>\n                </div>\n              </Paper>\n            </Grid>\n          </Grid>\n        </div>\n      </Dashboard>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    categoryList: state.category.categoryList,\n    listing: state.listing,\n    authToken: state.auth.token,\n    userID: state.auth.userID,\n  };\n};\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setListing,\n      setCategoryList,\n    },\n    dispatch\n  );\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Badge from '@material-ui/core/Badge';\n\nimport './message.scss';\n\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: 50,\n    marginRight: 50,\n  },\n\n  cardActionButtons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  user: {\n    display: 'flex',\n  },\n  userIcon:{\n      marginRight: 20\n  }\n});\n\nexport default function MessageCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardContent>\n          <div className={classes.title}>\n            <div className={classes.user}>\n              <AccountCircleIcon className={classes.userIcon}/>\n              <Typography gutterBottom variant=\"h6\" component=\"h3\">\n                {props.UserName}\n              </Typography>\n            </div>\n          { !props.ReadByUser.includes(props.UserID) ? \n          <Badge badgeContent={'new'} color=\"secondary\"  />\n          : null\n          }\n          </div>\n          <Typography color=\"textSecondary\">\n            Last Received:{props.MessageTime}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.Message}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const createMessage = createAsyncThunk(\n  \"createMessage\",\n  async (detail, thunkAPI) => {\n    const token = thunkAPI.getState().auth.token;\n\n    const fetchUrl = \"https://heed.place/api/message/createmessage\";\n    const response = await fetch(fetchUrl, {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        user2ID: detail.ownerUserID,\n        user2Name: detail.ownerUserName,\n      }),\n    });\n    let jsondata = await response.json();\n    return jsondata.savedMessage;\n  }\n);\n\nexport const fetchMessage = createAsyncThunk(\n  \"fetchMessage\",\n  async (detail, thunkAPI) => {\n    const token = thunkAPI.getState().auth.token;\n    const fetchUrl = \"https://heed.place/api/message/createmessage\";\n    const response = await fetch(fetchUrl, {\n      method: \"POST\",\n      mode: \"cors\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        user2ID: detail.user2ID,\n        user2Name: detail.user2Name,\n      }),\n    });\n    let jsondata = await response.json();\n    return jsondata.savedMessage;\n  }\n);\n\nexport const messageSlice = createSlice({\n  name: \"message\",\n  initialState: {\n    messageListing: [],\n  },\n  reducers: {\n    setMessage: (state, { payload }) => {\n      state.messageListing = payload.messageListing;\n    },\n  },\n  extraReducers: {\n    [createMessage.fulfilled]: (state, action) => {\n      state.messageListing = action.payload;\n    },\n    [fetchMessage.fulfilled]: (state, action) => {\n      state.messageListing = action.payload;\n    },\n  },\n});\nexport const { setMessage } = messageSlice.actions;\n","import React, { useState } from \"react\";\nimport Dashboard from \"../../dashboard/Dashboard\";\nimport MessageCard from \"./messageCard\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Button from \"@material-ui/core/Button\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport \"./message.scss\";\nimport { setMessage } from \"../../reducers/messagereducer\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"scroll\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    width: \"50%\",\n    height: \"50%\",\n    overflow: \"scroll\",\n    display: \"flex\",\n    flexDirection: \"column-reverse\",\n  },\n\n  container: {\n    bottom: 0,\n  },\n  bubbleContainer: {\n    width: \"100%\",\n    display: \"flex\",\n  },\n  bubble: {\n    border: \"0.5px solid black\",\n    borderRadius: \"10px\",\n    margin: \"5px\",\n    padding: \"10px\",\n    display: \"inline-block\",\n  },\n  bubbleWrap: {\n    display: \"flex\",\n  },\n  inputContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  replyButton: {\n    marginTop: 15,\n  },\n}));\n\nexport function ChatLayout() {\n  const classes = useStyles();\n  const message = useSelector((state) => state.message);\n  const requserID = useSelector((state) => state.auth.userID);\n\n  const chatBubbles = message.messageListing[0].messageList.map((item) => {\n    if (item.sender_user_id === requserID) {\n      return (\n        <div className={`${classes.bubbleContainer} right`}>\n          <AccountCircleIcon fontSize=\"large\" />\n          <div className=\"classes.bubbleWrap\">\n            <div className={classes.bubble}>\n              <div className={classes.button}>{item.msg_text}</div>\n            </div>\n            <Typography color=\"textSecondary\" className=\"chatTime\">\n              {item.messageTime}\n            </Typography>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={`${classes.bubbleContainer} left`}>\n          <AccountCircleIcon fontSize=\"large\" />\n          <div className=\"classes.bubbleWrap\">\n            <div className={classes.bubble}>\n              <div className={classes.button}>{item.msg_text}</div>\n            </div>\n            <Typography color=\"textSecondary\" className=\"chatTime\">\n              {item.messageTime}\n            </Typography>\n          </div>\n        </div>\n      );\n    }\n  });\n  return <div className={classes.container}>{chatBubbles}</div>;\n}\n\nexport default function MessageModel() {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n  const [messageText, setMessageText] = React.useState(\"\");\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.auth.token);\n  const detail = useSelector((state) => state.detail.listingDetail);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        startIcon={<SendIcon />}\n        onClick={handleOpen}\n      >\n        Message Owner\n      </Button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <div className={classes.inputContainer}>\n              <TextField\n                label=\"Enter Your Message\"\n                id=\"messageText\"\n                name=\"messageText\"\n                name=\"messageText\"\n                autoComplete=\"messageText\"\n                value={messageText}\n                onChange={(e) => setMessageText(e.target.value)}\n              />\n              <Button\n                className={classes.replyButton}\n                onClick={async () => {\n                  const response = await fetch(\n                    \"https://heed.place/api/message/sendmessage\",\n                    {\n                      method: \"PUT\",\n                      mode: \"cors\",\n                      credentials: \"same-origin\",\n                      headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                      },\n                      body: JSON.stringify({\n                        user2ID: detail.ownerUserID,\n                        text: messageText,\n                      }),\n                    }\n                  );\n                  // const response2 = await fetch(\n                  //   'https://heed.place/api/message/fetchallmessage',\n                  //   {\n                  //     method: 'GET',\n                  //     mode: 'cors',\n                  //     credentials: 'same-origin',\n                  //     headers: {\n                  //       'Content-Type': 'application/json',\n                  //       Authorization: `Bearer ${token}`,\n                  //     },\n                  //   }\n                  // );\n                  // let jsondata = await response2.json();\n                  // dispatch(setMessage({ messageListing: jsondata.foundMessage }))\n                }}\n              >\n                send\n              </Button>\n            </div>\n            <ChatLayout />\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\nexport const fetchDetail = createAsyncThunk(\n  \"fetchDetail\",\n  async (listingID, thunkAPI) => {\n    // let listingID = window.location.pathname.split('/')[2];\n    const token = thunkAPI.getState().auth.token;\n\n    const fetchUrl = `https://heed.place/api/listings/fetchone/${listingID}`;\n    const response = await fetch(fetchUrl, {\n      method: \"GET\",\n      mode: \"cors\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    let jsondata = await response.json();\n    return jsondata.oneListing;\n  }\n);\n\nexport const detailSlice = createSlice({\n  name: \"detail\",\n  initialState: {\n    listingDetail: null,\n  },\n  reducers: {\n    setDetail: (state, { payload }) => {\n      state.listingDetail = payload.listingDetail;\n    },\n  },\n  extraReducers: {\n    [fetchDetail.fulfilled]: (state, action) => {\n      state.listingDetail = action.payload;\n    },\n  },\n});\nexport const { setDetail } = detailSlice.actions;\n","import React, { Component } from 'react';\nimport AliceCarousel from 'react-alice-carousel';\nimport 'react-alice-carousel/lib/alice-carousel.css';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport './Detail.scss';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nimport GavelTwoToneIcon from '@material-ui/icons/GavelTwoTone';\nimport Dashboard from '../../dashboard/Dashboard';\nimport MessageModal from '../Message/messageModal';\nimport { NavLink } from 'react-router-dom';\nimport { setDetail, fetchDetail } from '../../reducers/detailreducer';\nimport { setMessage, createMessage } from '../../reducers/messagereducer';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listingDetail: {},\n    };\n  }\n\n  responsive = {\n    0: { items: 1 },\n    1024: { items: 2 },\n  };\n\n  async componentDidMount() {\n    let listingID = window.location.pathname.split('/')[2];\n    this.props.fetchDetail(listingID);\n  }\n\n  render() {\n    const listingDetail = this.props.detail.listingDetail;\n\n    //  {listingDetail.ownerUserID === this.props.currentUserID ? console.log('yes') : console.log('no')}\n    if (listingDetail === null) {\n      return null;\n    }\n    const displayImages = listingDetail.images.map((item) => (\n      <img src={item} className=\"sliderimg\" alt=\"\" />\n    ));\n\n    return (\n      <Dashboard>\n        <div className=\"DetailContainer\">\n          <h2 className=\"head\">\n            {this.props.detail.listingDetail.name}\n            <BookmarkBorderIcon />\n            {/* <BookmarkIcon color=\"primary\" /> */}\n          </h2>\n          <div className=\"carousel\">\n            <AliceCarousel\n              responsive={this.responsive}\n              autoPlayInterval={2000}\n              autoPlayDirection=\"rtl\"\n              autoPlay={true}\n              autoHeight={true}\n              fadeOutAnimation={true}\n              mouseTrackingEnabled={true}\n              disableAutoPlayOnAction={true}\n            >\n              {displayImages}\n            </AliceCarousel>\n          </div>\n          <div className=\"detail\">\n            <div className=\"title\">Description:</div>\n            <p>{this.props.detail.listingDetail.description}</p>\n          </div>\n          <div>Things I'm searching for:</div>\n          <p>{this.props.detail.listingDetail.exchangeDescription}</p>\n          <div className=\"button\">\n            <NavLink to={`/makeoffer/${listingDetail._id}`}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                startIcon={<GavelTwoToneIcon />}\n              >\n                Make A Bid\n              </Button>\n            </NavLink>\n            <div\n              onClick={() => {\n                this.props.createMessage(\n                  this.props.detail.listingDetail\n                );\n              }}\n            >\n              <MessageModal />\n            </div>\n          </div>\n        </div>\n      </Dashboard>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    detail: state.detail,\n    authToken: state.auth.token,\n    currentUserID: state.auth.userID,\n    message: state.message,\n  };\n};\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setDetail,\n      fetchDetail,\n      setMessage,\n      createMessage,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);\n","import React, { Component } from \"react\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GavelTwoToneIcon from \"@material-ui/icons/GavelTwoTone\";\nimport \"./watchList.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport Dashboard from \"../../dashboard/Dashboard\";\n\nimport { setWatch, fetchWatchList } from \"../../reducers/watchreducer\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginBottom: 50,\n    marginRight: 50,\n  },\n  media: {\n    height: 200,\n    width: 345,\n  },\n  cardActionButtons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n});\n\nexport function MediaCard(props) {\n  const classes = useStyles();\n  const watchList = useSelector((state) => state.watch.watchList);\n  const authTokenInFuncCompState = useSelector((state) => state.auth.token);\n  console.log(\"WatchList = useSelector\", watchList);\n  const watchListIds = watchList.map((element) => element.listingID);\n  const isWatched = watchListIds.indexOf(props.listingID) >= 0;\n  // const isWatched = false\n  const dispatch = useDispatch();\n  return (\n    <Card className={classes.root}>\n      <NavLink to={`/prodetail/${props.listingID}`} listingID={props.listingID}>\n        <CardMedia className={classes.media} image={props.image} />\n      </NavLink>\n      <CardContent>\n        <div className=\"cardTitle\">\n          <Typography gutterBottom variant=\"h5\" component=\"h3\">\n            {props.title}\n          </Typography>\n          {isWatched && authTokenInFuncCompState !== null ? (\n            <BookmarkIcon\n              onClick={async (e, value) => {\n                e.stopPropagation();\n                const response = await fetch(\n                  \"https://heed.place/api/watchlist/toggle\",\n                  {\n                    method: \"POST\",\n                    mode: \"cors\",\n                    credentials: \"same-origin\",\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: `Bearer ${authTokenInFuncCompState}`,\n                    },\n                    body: JSON.stringify({\n                      listingID: `${props.listingID}`,\n                    }),\n                  }\n                );\n                let jsondata = await response.json();\n                dispatch(fetchWatchList());\n              }}\n            />\n          ) : authTokenInFuncCompState !== null ? (\n            <BookmarkBorderIcon\n              onClick={async (e, value) => {\n                e.stopPropagation();\n                const response = await fetch(\n                  \"https://heed.place/api/watchlist/toggle\",\n                  {\n                    method: \"POST\",\n                    mode: \"cors\",\n                    credentials: \"same-origin\",\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: `Bearer ${authTokenInFuncCompState}`,\n                    },\n                    body: JSON.stringify({\n                      listingID: `${props.listingID}`,\n                    }),\n                  }\n                );\n                let jsondata = await response.json();\n                dispatch(fetchWatchList());\n                // dispatch(setWatch({watchList:jsondata.myWatchList}))\n              }}\n            />\n          ) : null}\n        </div>\n        <Typography variant=\"body1\" color=\"textPrimary\" component=\"h3\">\n          Owner: {props.owner}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Bids:{props.bids}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.cardActionButtons}>\n        <NavLink to=\"/makeoffer/prodId9283dfs8902\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            startIcon={<GavelTwoToneIcon />}\n          >\n            Make A Bid\n          </Button>\n        </NavLink>\n      </CardActions>\n    </Card>\n  );\n}\n\nclass WatchList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      watchList: {},\n    };\n  }\n\n  async componentDidMount() {\n    this.props.fetchWatchList();\n\n    // const response = await fetch(\n    //   'https://heed.place/api/watchlist/',\n    //   {\n    //     method: 'GET',\n    //     mode: 'cors',\n    //     credentials: 'same-origin',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //       'Authorization': `Bearer ${this.props.authToken}`\n    //     },\n    //   }\n    // );\n    // let jsondata = await response.json();\n\n    // this.props.setWatch({watchList: jsondata.myWatchList})\n  }\n  render() {\n    const displayCards = this.props.watch.watchList.map((watchList) => {\n      return (\n        <MediaCard\n          title={watchList.item.name}\n          owner={watchList.item.ownerUserName}\n          // bids={item.ItemBids}\n          image={watchList.item.images[0]}\n          listingID={watchList.item._id}\n        />\n      );\n    });\n    return (\n      <Dashboard>\n        <div className=\"watch-list-container\">\n          <div className=\"heading\">\n            <Typography variant=\"h5\">My Watch List</Typography>\n          </div>\n          <div className=\"card-wrapper\">\n            <div className=\"cards\">{displayCards}</div>\n          </div>\n        </div>\n      </Dashboard>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    watch: state.watch,\n    authToken: state.auth.token,\n  };\n};\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setWatch,\n      fetchWatchList,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WatchList);\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const currBidsSlice = createSlice({\n  name: 'currbids',\n  initialState: {\n    currBidsList: []\n  },\n  reducers: {\n    setCurrBidsList: (state, { payload }) => {\n      state.currBidsList = payload.currBidsList\n    },\n  }\n})\nexport const { setCurrBidsList } = currBidsSlice.actions","import React, { Component, useState, useEffect } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport MyListing from \"../MyListing\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport MessageIcon from \"@material-ui/icons/Message\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport Badge from \"@material-ui/core/Badge\";\nimport { Message } from \"@material-ui/icons\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { setCurrBidsList } from \"../../reducers/currbidsreducer.jsx\";\nimport Dashboard from \"../../dashboard/Dashboard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: \"100%\",\n    minWidth: \"100%\",\n    marginBottom: 50,\n    marginRight: 50,\n  },\n  media: {\n    display: \"flex\",\n    justifyContent: \"row\",\n    height: 200,\n    width: 345,\n    margin: \"5px\",\n  },\n  cardContent: {\n    display: \"flex\",\n    justifyContent: \"row\",\n    margin: \"5px\",\n    maxWidth: \"100%\",\n  },\n  itemIbidWithName: {\n    maxWidth: \"50%\",\n  },\n});\n\nexport function CardItemIbidWith(props) {\n  const classes = useStyles();\n  console.log(\"CardItemsIBidWith\", props);\n  const multipleItemsCardMedia = props.items_bid.map((item) => {\n    return (\n      <div className={classes.itemIbidWithName}>\n        <Typography variant=\"h6\" component=\"h6\">\n          {item.name}\n        </Typography>\n        <CardMedia className={classes.media} image={item.images[0]} />\n      </div>\n    );\n  });\n  return <Card className={classes.cardContent}>{multipleItemsCardMedia}</Card>;\n}\n\nexport function MediaCard(props) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  return (\n    <Card className={classes.root}>\n      <CardMedia className={classes.media} image={props.image}></CardMedia>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h3\">\n          {props.title}\n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\n          Status:{props.status}\n        </Typography>\n      </CardContent>\n      <Typography gutterBottom variant=\"h5\" component=\"h5\">\n        Items I bid with:\n      </Typography>\n      <CardItemIbidWith items_bid={props.items_bid} />\n      <CardActions\n        className=\"card-action-buttons\"\n        onClick={async () => {\n          const response = await fetch(\n            `https://heed.place/api/listingbid/cancelbid`,\n            {\n              method: \"PUT\",\n              mode: \"cors\",\n              credentials: \"same-origin\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${props.usersToken}`,\n              },\n              body: JSON.stringify({\n                _id: props.listingBidId,\n              }),\n            }\n          );\n          console.log(\"Cancel work\", response.json());\n          // dispatch(fetchOtherUsersBidsOnMyListing())\n          const responseToRefreshCurrBids = await fetch(\n            \"https://heed.place/api/listingbid/fetchownerbid\",\n            {\n              method: \"GET\",\n              mode: \"cors\",\n              credentials: \"same-origin\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${props.usersToken}`,\n              },\n            }\n          );\n\n          let jsondata = await responseToRefreshCurrBids.json();\n          dispatch(\n            setCurrBidsList({ currBidsList: jsondata.allListingBidByOwner })\n          );\n          // props.setCurrBidsList({ currBidsList: jsondata.allListingBidByOwner });\n        }}\n      >\n        {props.status === \"active\" ? (\n          <Button size=\"small\" color=\"secondary\">\n            {<CancelIcon />} Cancel Bid\n          </Button>\n        ) : null}\n      </CardActions>\n    </Card>\n  );\n}\n\nexport function CurrentBidsCards(props) {\n  const currBids = useSelector((state) => state.currbids.currBidsList);\n  const authToken = useSelector((state) => state.auth.token);\n  const filteredDispayCardForAcctive = currBids.filter(\n    (filterredCurrBidsActive) => filterredCurrBidsActive.status === \"active\"\n  );\n  const displayCards = filteredDispayCardForAcctive.map((item) => {\n    return (\n      <MediaCard\n        title={item.listing.name}\n        bids={0}\n        image={\n          item.listing.images.length\n            ? item.listing.images[0]\n            : \"https://media.istockphoto.com/photos/single-cloud-central-in-blue-sky-picture-id667409780\"\n        }\n        status={item.status}\n        items_bid={item.items_bid}\n        listingBidId={item._id}\n        usersToken={authToken}\n      />\n    );\n  });\n  return (\n    <div>\n      <div className=\"cards\">{displayCards}</div>\n    </div>\n  );\n}\n\nexport function AcceptedBidsCards(props) {\n  const currBids = useSelector((state) => state.currbids.currBidsList);\n  const filteredDispayCardForAcctive = currBids.filter(\n    (filterredCurrBidsActive) => filterredCurrBidsActive.status !== \"active\"\n  );\n  const displayCards = filteredDispayCardForAcctive.map((item) => {\n    return (\n      <MediaCard\n        title={item.listing.name}\n        bids={0}\n        image={\n          item.listing.images.length\n            ? item.listing.images[0]\n            : \"https://media.istockphoto.com/photos/single-cloud-central-in-blue-sky-picture-id667409780\"\n        }\n        status={item.status}\n        items_bid={item.items_bid}\n      />\n    );\n  });\n  return (\n    <div>\n      <div className=\"cards\">{displayCards}</div>\n    </div>\n  );\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStylesForTabs = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport function CurrentBids(props) {\n  const classes = useStylesForTabs();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    async function fetchcurrbids() {\n      const response = await fetch(\n        \"https://heed.place/api/listingbid/fetchownerbid\",\n        {\n          method: \"GET\",\n          mode: \"cors\",\n          credentials: \"same-origin\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${props.authToken}`,\n          },\n        }\n      );\n\n      let jsondata = await response.json();\n      props.setCurrBidsList({ currBidsList: jsondata.allListingBidByOwner });\n    }\n    fetchcurrbids();\n  });\n\n  return (\n    <Dashboard>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"simple tabs example\"\n          >\n            <Tab label=\"Active\" {...a11yProps(0)} />\n            <Tab label=\"History\" {...a11yProps(1)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          This is Example of Active items\n          <CurrentBidsCards />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          This is Example of Accepted items\n          <AcceptedBidsCards />\n        </TabPanel>\n      </div>\n    </Dashboard>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currBidsList: state.currBidsList,\n    authToken: state.auth.token,\n  };\n};\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setCurrBidsList,\n    },\n    dispatch\n  );\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentBids);\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { NavLink } from \"react-router-dom\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { setToken } from \"../../reducers/authreducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      &nbsp;\n      <NavLink to=\"/\">ExDepot</NavLink>\n      &nbsp;\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const [userName, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.auth.token);\n\n  return token ? (\n    <Redirect to=\"/discover\" />\n  ) : (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Login\n        </Typography>\n        {error !== \"\" ? <Alert severity=\"error\">{error}</Alert> : null}\n        <div className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"userName\"\n            label=\"User Name\"\n            name=\"userName\"\n            autoComplete=\"userName\"\n            autoFocus\n            value={userName}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={async () => {\n              const response = await fetch(\n                \"https://heed.place/api/users/login\",\n                {\n                  method: \"POST\",\n                  mode: \"cors\",\n                  credentials: \"same-origin\",\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify({\n                    userName,\n                    password,\n                  }),\n                }\n              );\n              let jsondata = await response.json();\n              if (response.status === 409) {\n                setError(jsondata.message);\n              } else {\n                dispatch(\n                  setToken({\n                    token: jsondata.token,\n                    userID: jsondata.userID,\n                    userName: jsondata.userName,\n                  })\n                );\n              }\n            }}\n          >\n            Login\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <NavLink to=\"/forgotpw\">\n                <Link href=\"\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </NavLink>\n            </Grid>\n            <Grid item>\n              <NavLink to=\"/register\">\n                <Link href=\"\" variant=\"body2\">\n                  {\"Don't have an account? Register\"}\n                </Link>\n              </NavLink>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { NavLink } from \"react-router-dom\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      &nbsp;\n      <NavLink to=\"/\">ExDepot</NavLink>\n      &nbsp;\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Register() {\n  const classes = useStyles();\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [userName, setUserName] = useState();\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [alertError, setError] = useState(\"\");\n  const [registrationComplete, SetRegistrationComplete] = useState(false);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        {alertError !== \"\" ? (\n          <Alert severity=\"error\">{alertError}</Alert>\n        ) : null}\n        {registrationComplete && (\n          <Alert severity=\"success\">\n            register successful click&nbsp;\n            <NavLink to=\"/login\">\n              <Link href=\"\" variant=\"body2\">\n                here\n              </Link>\n            </NavLink>\n            &nbsp;to login\n          </Alert>\n        )}\n        <div className={classes.form}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"fname\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                value={fname}\n                onChange={(event) => setFname(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                value={lname}\n                onChange={(event) => setLname(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"userName\"\n                label=\"UserName\"\n                name=\"UserName\"\n                autoComplete=\"userName\"\n                value={userName}\n                onChange={(event) => setUserName(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(event) => setEmail(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"phoneNumber\"\n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                autoComplete=\"phoneNumber\"\n                value={phoneNumber}\n                onChange={(event) => setPhoneNumber(event.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={(event) => setPassword(event.target.value)}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={async () => {\n              const response = await fetch(\n                \"https://heed.place/api/users/register\",\n                {\n                  method: \"POST\",\n                  mode: \"cors\",\n                  credentials: \"same-origin\",\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                  body: JSON.stringify({\n                    firstName: fname,\n                    lastName: lname,\n                    userName: userName,\n                    phoneNumber: phoneNumber,\n                    email: email,\n                    password: password,\n                  }),\n                }\n              );\n\n              console.log(response);\n\n              if (response.status == 409) {\n                let jsondata = await response.json();\n                console.log(jsondata);\n                setError(jsondata.message);\n              } else {\n                SetRegistrationComplete(true);\n              }\n            }}\n          >\n            Register\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <NavLink to=\"/login\">\n                <Link href=\"\" variant=\"body2\">\n                  Already have an account? Login\n                </Link>\n              </NavLink>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { NavLink } from 'react-router-dom';\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      &nbsp;\n      <NavLink to=\"/\">\n      ExDepot\n      </NavLink>\n      &nbsp;\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function ForgotPW() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Request to reset password\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            send email with reset link\n          </Button>\n          <Grid container>\n            <Grid item xs>\n            <NavLink to=\"/login\">\n              <Link href=\"\" variant=\"body2\">\n                Login\n              </Link>\n            </NavLink>\n            </Grid>\n            <Grid item>\n            <NavLink to=\"/register\">\n              <Link href=\"\" variant=\"body2\">\n                {\"Don't have an account? Register\"}\n              </Link>\n            </NavLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","export default __webpack_public_path__ + \"static/media/1.c3f8a372.jpg\";","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./MakeOffer.scss\";\nimport image1 from \"../img/1.jpg\";\nimport AliceCarousel from \"react-alice-carousel\";\nimport \"react-alice-carousel/lib/alice-carousel.css\";\n\nimport { fetchMyListings } from \"../../reducers/listingreducer\";\nimport { bindActionCreators } from \"redux\";\n\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport Button from \"@material-ui/core/Button\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport GavelTwoToneIcon from \"@material-ui/icons/GavelTwoTone\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport Dashboard from \"../../dashboard/Dashboard\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginBottom: 50,\n    marginRight: 50,\n  },\n  media: {\n    height: 200,\n    width: 345,\n  },\n  cardActionButtons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  CardContent: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n});\n\nexport function MyListCard(props) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <CardMedia className={classes.media} image={props.image} />\n      <CardContent className={classes.CardContent}>\n        <Typography gutterBottom variant=\"h5\" component=\"h3\">\n          {props.title}\n        </Typography>\n        <CardActionArea onClick={props.onClick}>\n          <AddBoxIcon fontSize=\"large\" />\n        </CardActionArea>\n      </CardContent>\n    </Card>\n  );\n}\nexport function MyOfferCard(props) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <CardMedia className={classes.media} image={props.image} />\n      <CardContent className={classes.CardContent}>\n        <Typography gutterBottom variant=\"h5\" component=\"h3\">\n          {props.title}\n        </Typography>\n        <CardActionArea onClick={props.RemoveOnClick}>\n          <RemoveCircleIcon fontSize=\"large\" />\n        </CardActionArea>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport class MakeOffer extends Component {\n  state = {\n    itemsbids: [],\n    alertNoneSelectedToBidWith: false,\n  };\n  async componentDidMount() {\n    this.props.fetchMyListings();\n  }\n\n  async makeBidApi() {\n    //ListingID is to grab the id from the req.params\n    let listingID = window.location.pathname.split(\"/\")[2];\n\n    //convert all state.items and grab only ids of that itembids\n    const itemIDsToBidWithOnlyArr = this.state.itemsbids.map(\n      (onlyItemIdNeeded) => onlyItemIdNeeded._id\n    );\n\n    //this if statement is to check and alert for none selected Items for bid\n    if (itemIDsToBidWithOnlyArr) {\n      this.setState({\n        alertNoneSelectedToBidWith: true,\n      });\n    }\n\n    //remove alert if theres some length in bidding items ids\n    if (itemIDsToBidWithOnlyArr.length > 0) {\n      this.setState({\n        alertNoneSelectedToBidWith: false,\n      });\n      const response = await fetch(\n        `https://heed.place/api/listingbid/createbid`,\n        {\n          method: \"POST\",\n          mode: \"cors\",\n          credentials: \"same-origin\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${this.props.authToken}`,\n          },\n          body: JSON.stringify({\n            id: listingID,\n            items_bid: itemIDsToBidWithOnlyArr,\n          }),\n        }\n      );\n    }\n  }\n  render() {\n    const listingDetail = this.props.detail.listingDetail;\n    const displayImages = listingDetail.images.map((item) => (\n      <img src={item} className=\"sliderimg\" alt=\"\" />\n    ));\n    const itemOfferedIds = this.state.itemsbids.map((item) => item._id);\n    const myListings = this.props.listing.listingList.filter(\n      (item) => itemOfferedIds.indexOf(item._id) == -1\n    );\n\n    const myListCards = myListings.map((item) => {\n      return (\n        <MyListCard\n          title={item.name}\n          image={item.images[0]}\n          detail={item.description}\n          listingID={item._id}\n          fullItem={item}\n          onClick={() => {\n            const itemsbids = [item, ...this.state.itemsbids];\n            this.setState({\n              itemsbids: itemsbids,\n            });\n          }}\n        />\n      );\n    });\n    const OfferedCard = this.state.itemsbids.map((item) => {\n      return (\n        <MyOfferCard\n          title={item.name}\n          image={item.images[0]}\n          detail={item.description}\n          listingID={item._id}\n          fullItem={item}\n          RemoveOnClick={() => {\n            const removedItemsBids = this.state.itemsbids.filter(\n              (element) => element._id !== item._id\n            );\n            this.setState({\n              itemsbids: removedItemsBids,\n            });\n          }}\n        />\n      );\n    });\n\n    return (\n      <Dashboard>\n        <div className=\"container\">\n          <div className=\"offerDetail\">\n            <div className=\"offeredItem\">\n              <Typography className=\"userInfo\" variant=\"h5\" component=\"h3\">\n                Offered Items\n              </Typography>\n              {OfferedCard}\n            </div>\n            <div className=\"myListItem\">\n              <Typography className=\"userInfo\" variant=\"h5\" component=\"h3\">\n                My Items\n              </Typography>\n              {myListCards}\n            </div>\n          </div>\n          <div className=\"productDetail\">\n            <Typography className=\"productTitle\" variant=\"h5\" component=\"h5\">\n              Product Name: {listingDetail.name}\n            </Typography>\n\n            <AliceCarousel\n              responsive={this.responsive}\n              autoPlayInterval={2000}\n              autoPlayDirection=\"rtl\"\n              autoPlay={true}\n              autoHeight={true}\n              fadeOutAnimation={true}\n              mouseTrackingEnabled={true}\n              disableAutoPlayOnAction={true}\n            >\n              {displayImages}\n            </AliceCarousel>\n\n            <Typography variant=\"h6\" component=\"h3\" className=\"detailTitle\">\n              Product Detail:\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className=\"detailBody\"\n            >\n              {listingDetail.description}\n            </Typography>\n            <Typography variant=\"h6\" component=\"h3\" className=\"IWantTitle\">\n              What I would like to get for the item:\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className=\"IWantBody\"\n            >\n              {listingDetail.exchangeDescription}\n            </Typography>\n            {this.state.alertNoneSelectedToBidWith === true ? (\n              <Alert severity=\"error\">\n                You need to Select your Posted Items to Bid\n              </Alert>\n            ) : null}\n            <div className=\"button\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<GavelTwoToneIcon />}\n                onClick={() => {\n                  this.makeBidApi();\n                }}\n              >\n                Bid\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Dashboard>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    detail: state.detail,\n    authToken: state.auth.token,\n    listing: state.listing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchMyListings,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MakeOffer);\n","import React, { useState, useEffect } from \"react\";\nimport Dashboard from \"../../dashboard/Dashboard\";\nimport MessageCard from \"./messageCard\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Button from \"@material-ui/core/Button\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setMessage, fetchMessage } from \"../../reducers/messagereducer\";\n\nimport \"./message.scss\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"scroll\",\n    overflow: \"scroll\",\n    display: \"flex\",\n    flexDirection: \"column-reverse\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    width: \"50%\",\n    height: \"50%\",\n    overflow: \"scroll\",\n    display: \"flex\",\n    flexDirection: \"column-reverse\",\n  },\n\n  container: {\n    bottom: 0,\n  },\n  bubbleContainer: {\n    width: \"100%\",\n    display: \"flex\",\n  },\n  bubble: {\n    border: \"0.5px solid black\",\n    borderRadius: \"10px\",\n    margin: \"5px\",\n    padding: \"10px\",\n    display: \"inline-block\",\n  },\n  bubbleWrap: {\n    display: \"flex\",\n  },\n  inputContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  replyButton: {\n    marginTop: 15,\n  },\n}));\n\nexport function ChatLayout(props) {\n  const classes = useStyles();\n  const message = useSelector((state) =>\n    state.message.messageListing.find((msg) => msg._id === props.messageID)\n  );\n  const requserID = useSelector((state) => state.auth.userID);\n\n  const chatBubbles = message.messageList.map((item) => {\n    if (item.sender_user_id === requserID) {\n      return (\n        <div className={`${classes.bubbleContainer} right`}>\n          <AccountCircleIcon fontSize=\"large\" />\n          <div className=\"classes.bubbleWrap\">\n            <div className={classes.bubble}>\n              <div className={classes.button}>{item.msg_text}</div>\n            </div>\n            <Typography color=\"textSecondary\" className=\"chatTime\">\n              {item.date_created.split(\",\")[2]}\n            </Typography>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={`${classes.bubbleContainer} left`}>\n          <AccountCircleIcon fontSize=\"large\" />\n          <div className=\"classes.bubbleWrap\">\n            <div className={classes.bubble}>\n              <div className={classes.button}>{item.msg_text}</div>\n            </div>\n            <Typography color=\"textSecondary\" className=\"chatTime\">\n              {item.date_created.split(\",\")[2]}\n            </Typography>\n          </div>\n        </div>\n      );\n    }\n  });\n\n  return <div className={classes.container}>{chatBubbles}</div>;\n}\n\nexport default function Index() {\n  const classes = useStyles();\n  const token = useSelector((state) => state.auth.token);\n  const userID = useSelector((state) => state.auth.userID);\n  const dispatch = useDispatch();\n\n  useEffect(async () => {\n    const response = await fetch(\n      \"https://heed.place/api/message/fetchallmessage\",\n      {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    let jsondata = await response.json();\n    dispatch(setMessage({ messageListing: jsondata.foundMessage }));\n  }, []);\n\n  const [open, setOpen] = React.useState(false);\n  const [messageID, setMessageID] = React.useState(\"\");\n  const [messageText, setMessageText] = React.useState(\"\");\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const message = useSelector((state) => state.message.messageListing);\n\n  const displayMessage = message.map((item) => {\n    if (item.messageList.length > 0) {\n      return (\n        <div\n          onClick={async () => {\n            setMessageID(item._id);\n            setOpen(true);\n            const response = await fetch(\n              \"https://heed.place/api/message/markMessageRead\",\n              {\n                method: \"PUT\",\n                mode: \"cors\",\n                credentials: \"same-origin\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                  Authorization: `Bearer ${token}`,\n                },\n                body: JSON.stringify({\n                  id: item._id,\n                }),\n              }\n            );\n          }}\n        >\n          <MessageCard\n            UserID={userID}\n            UserName={item.user1ID === userID ? item.user2Name : item.user1Name}\n            Message={item.messageList[item.messageList.length - 1].msg_text}\n            MessageTime={item.messageList.date_created}\n            ReadByUser={item.read_by_user_ids}\n          />\n        </div>\n      );\n    }\n  });\n  const messageClicked = useSelector((state) =>\n    state.message.messageListing.find((msg) => msg._id === messageID)\n  );\n  return (\n    <Dashboard>\n      <div>\n        <div className=\"message-container\">{displayMessage}</div>\n\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className={classes.modal}\n          open={open}\n          onClose={handleClose}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={open}>\n            <div className={classes.paper}>\n              <div className={classes.inputContainer}>\n                <TextField\n                  label=\"Enter Your Message\"\n                  id=\"messageText\"\n                  name=\"messageText\"\n                  name=\"messageText\"\n                  autoComplete=\"messageText\"\n                  value={messageText}\n                  onChange={(e) => setMessageText(e.target.value)}\n                />\n                <Button\n                  className={classes.replyButton}\n                  onClick={async () => {\n                    let receiver = \"\";\n                    messageClicked.user2ID === userID\n                      ? (receiver = messageClicked.user1ID)\n                      : (receiver = messageClicked.user2ID);\n                    const response = await fetch(\n                      \"https://heed.place/api/message/sendmessage\",\n                      {\n                        method: \"PUT\",\n                        mode: \"cors\",\n                        credentials: \"same-origin\",\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                          Authorization: `Bearer ${token}`,\n                        },\n                        body: JSON.stringify({\n                          user2ID: receiver,\n                          text: messageText,\n                        }),\n                      }\n                    );\n                    // let jsondata = await response.json();\n                    const response2 = await fetch(\n                      \"https://heed.place/api/message/fetchallmessage\",\n                      {\n                        method: \"GET\",\n                        mode: \"cors\",\n                        credentials: \"same-origin\",\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                          Authorization: `Bearer ${token}`,\n                        },\n                      }\n                    );\n                    let jsondata = await response2.json();\n                    dispatch(\n                      setMessage({ messageListing: jsondata.foundMessage })\n                    );\n                  }}\n                >\n                  send\n                </Button>\n              </div>\n              <ChatLayout messageID={messageID} />\n            </div>\n          </Fade>\n        </Modal>\n      </div>\n    </Dashboard>\n  );\n}\n","import React, { Component } from \"react\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport Button from \"@material-ui/core/Button\";\nimport Dashboard from \"../../dashboard/Dashboard\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport \"./CreateNewListing.scss\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { setCategoryList } from \"../../reducers/categoryreducer\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nclass CreateNewListing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n      itemName: \"\",\n      itemDescription: \"\",\n      exchangeDescription: \"\",\n      category: {},\n    };\n  }\n  handleChange(files) {\n    this.setState(\n      {\n        files: files,\n      },\n      () => {\n        console.log(this.state.files);\n      }\n    );\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\n      \"https://heed.place/api/categories/fetchAllCategories\",\n      {\n        method: \"GET\",\n        mode: \"cors\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    let jsondata = await response.json();\n    this.props.setCategoryList({ categoryList: jsondata.fetchallCategories });\n  }\n\n  render() {\n    return (\n      <Dashboard>\n        <div className=\"create-listing-container\">\n          <div className=\"images-upload-wrapper\">\n            <DropzoneArea\n              filesLimit={24}\n              maxFileSize={250000000}\n              onChange={this.handleChange.bind(this)}\n            />\n          </div>\n          <div className=\"input-container\">\n            <TextField\n              classes={{ root: \"text-area-styling\" }}\n              label=\"Item Name\"\n              variant=\"outlined\"\n              value={this.state.itemName}\n              onChange={(e) => {\n                this.setState({ itemName: e.target.value });\n                console.log(\"item name\", this.state.itemName);\n              }}\n            />\n            <h4 className=\"title-for-text-input\">Item Description:</h4>\n            <TextareaAutosize\n              className=\"text-area-styling\"\n              id=\"outlined-basic\"\n              aria-label=\"item description\"\n              rowsMin={8}\n              placeholder=\"Description of the item you're trying to give for some other item from another person\"\n              value={this.state.itemDescription}\n              onChange={(e) => {\n                this.setState({ itemDescription: e.target.value });\n                console.log(\"item Desc\", this.state.itemDescription);\n              }}\n            />\n          </div>\n\n          <div className=\"input-container\">\n            <h4 className=\"title-for-text-input\">\n              What I want for this this item:\n            </h4>\n            <TextareaAutosize\n              className=\"text-area-styling\"\n              id=\"outlined-basic\"\n              aria-label=\"item description\"\n              rowsMin={8}\n              placeholder=\"say what you would like to trade it with \"\n              value={this.state.exchangeDescription}\n              onChange={(e) => {\n                this.setState({ exchangeDescription: e.target.value });\n                console.log(\n                  \"exchangeDescription\",\n                  this.state.exchangeDescription\n                );\n              }}\n            />\n          </div>\n          <Autocomplete\n            id=\"combo-box-demo\"\n            options={this.props.categoryList}\n            getOptionLabel={(option) => option.CategoryName}\n            value={this.state.category}\n            onChange={(e, value) => {\n              this.setState({ category: value }, () => {\n                console.log(this.state.category);\n              });\n            }}\n            style={{ width: 400 }}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Pick Category\" variant=\"outlined\" />\n            )}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            // className={classes.submit}\n            onClick={async () => {\n              const formData = new FormData();\n              formData.append(\"name\", this.state.itemName);\n              formData.append(\"description\", this.state.itemDescription);\n              formData.append(\n                \"exchangeDescription\",\n                this.state.exchangeDescription\n              );\n              formData.append(\"categoryID\", this.state.category._id);\n\n              for (let i = 0; i < this.state.files.length; i++) {\n                let file = this.state.files[i];\n                formData.append(`image_${i}`, file);\n              }\n              const response = await fetch(\n                \"https://heed.place/api/listings/createListing\",\n                {\n                  method: \"POST\",\n                  mode: \"cors\",\n                  credentials: \"same-origin\",\n                  headers: {\n                    // 'Content-Type': 'application/json',\n                    Authorization: `Bearer ${this.props.authToken}`,\n                  },\n\n                  // itemName: '',\n                  // itemDescription: '',\n                  // exchangeDescription: '',\n                  // // category: {},\n                  // body: JSON.stringify({\n                  //   name: this.state.itemName ,\n                  //   description: this.state.itemDescription,\n                  //   exchangeDescription: this.state.exchangeDescription,\n                  //   categoryID: this.state.category._id,\n                  //   images: [],\n                  // }),\n                  body: formData,\n                }\n              );\n              let jsondata = await response.json();\n              console.log(\"request from fe create listing\", jsondata);\n            }}\n          >\n            Create New Listing\n          </Button>\n        </div>\n      </Dashboard>\n    );\n  }\n}\n\n// export default CreateNewListing;\n\nconst mapStateToProps = (state) => {\n  return {\n    categoryList: state.category.categoryList,\n    authToken: state.auth.token,\n  };\n};\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      setCategoryList,\n    },\n    dispatch\n  );\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateNewListing);\n","import React, { Component } from \"react\";\nimport \"./dashboard.scss\";\n// import SideNav from './SideNav'\n// import TopNav from './TopNav'\nimport Dashboard from \"./Dashboard\";\nimport Discover from \"../pages/Discover\";\nimport Categories from \"../pages/Category\";\nimport Detail from \"../pages/Detail\";\nimport MyListing from \"../pages/MyListing\";\n// import AcceptDecline from \"../pages/AcceptDecline\";\nimport AcceptDeclineModal from \"../pages/AcceptDeclineModal\";\nimport WatchList from \"../pages/WatchList\";\nimport CurrentBids from \"../pages/CurrentBids/\";\nimport Login from \"../pages/Login\"; \nimport Register from \"../pages/Register\"; \nimport ForgotPW from \"../pages/ForgotPW\";\nimport MakeOffer from \"../pages/MakeOffer\";\nimport Message from \"../pages/Message\";\nimport CreateNewListing from \"../pages/CreateNewListing\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n\n} from \"react-router-dom\";\nexport default class index extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n\n          <Route path=\"/discover\">\n            <Discover />\n          </Route>\n\n          <Route path=\"/categories\">\n          <Categories />\n        </Route> \n          <Route path=\"/categories/:categoryId\">\n            <Categories />\n          </Route> \n\n          <Route path=\"/mylisting\">\n            <MyListing />\n          </Route>\n\n          <Route path=\"/messages\">\n            <Message />\n          </Route>\n          <Route path=\"/watchlist\">\n            <WatchList />\n          </Route>\n\n          <Route path=\"/currbids\">\n            <CurrentBids />\n          </Route>\n\n          <Route path=\"/createnewlisting\">\n            <CreateNewListing />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route> \n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/forgotpw\">\n            <ForgotPW />\n          </Route>\n          <Route path=\"/profile\"></Route> \n          <Route path=\"/help\"></Route>\n          <Route path=\"/searchbar\"></Route>\n          <Route path=\"/makeoffer/:productId\">\n            <MakeOffer />\n          </Route>\n          <Route path=\"/prodetail/:productId\">\n            <Detail />\n          </Route>\n          <Route path=\"/\">\n            <Redirect to=\"/discover\" />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n","import { combineReducers } from 'redux'\nimport { authSlice } from './authreducer.jsx'\nimport { categorySlice } from './categoryreducer.jsx'\nimport { listingSlice} from './listingreducer.jsx'\nimport { currBidsSlice } from './currbidsreducer.jsx'\nimport { watchSlice } from './watchreducer.jsx'\nimport { detailSlice } from './detailreducer'\nimport { messageSlice} from './messagereducer'\nimport { SellerBiddedOnBidsItemsSlice } from './sellerbiddedonbidsitemsreducer'\n\nexport default combineReducers({\n  auth: authSlice.reducer,\n  category: categorySlice.reducer,\n  listing: listingSlice.reducer,\n  currbids: currBidsSlice.reducer,\n  watch: watchSlice.reducer,\n  detail: detailSlice.reducer,\n  message: messageSlice.reducer,\n  sellerbiddedonbids: SellerBiddedOnBidsItemsSlice.reducer,\n\n})","import React, { Component } from 'react';\nimport MainDashboard from './dashboard/index';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './reducers';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'root2',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(persistedReducer, applyMiddleware(logger, thunk));\n\nlet persistor = persistStore(store);\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <MainDashboard />\n        </PersistGate>\n      </Provider>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}